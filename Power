#include<iostream>
#include<cfloat>
#include<cmath>
using namespace std;

bool equal(double m, double n)
{
	if(abs(m-n)<0.000001)
		return true;
	return false;
}

double PowerWithUnsigned(double base, unsigned int exponent)
{
	if(exponent==0)
		return 1;
	if(exponent==1)
		return base;
	double ret = PowerWithUnsigned(base,exponent>>1);
	ret *= ret;
	if(exponent &1==1)
		ret *=base;
	return ret;
}

double Power(double base, int exponent)
{
	double ret=1.0;
	int flag = 0;
	
	if(equal(exponent,0.0))
		return 1.0;
	if(base==0)
		return 0.0;
	if(exponent<0)
	{
		flag=1;
		exponent = -exponent;
	}
	for(int i=1;i<=exponent;i++)
	{
		ret *=base;
		if(ret>DBL_MAX)
			return -1;
	}
	if(flag)
		ret = 1.0/ret;
	return ret;
}

double Power2(double base, int exponent)
{

	int flag = 0;
	
	if(equal(exponent,0.0))
		return 1.0;
	if(base==0)
		return 0.0;
	if(exponent<0)
	{
		flag=1;
		exponent = -exponent;
	}
	double ret = PowerWithUnsigned(base,exponent);
	if(flag)
		ret = 1.0/ret;
	return ret;
}



int main()
{
	cout<<Power(5.0,2)<<endl;
	cout<<Power2(5.0,2)<<endl;
	return 0;
}
