class Solution
{
public:
	void push(int node) {
		stack1.push(node);
	}

	int pop() {
		if(stack1.empty())
			return -1;
		while(!stack1.empty())
		{
			int temp = stack1.top();
			stack1.pop();
			stack2.push(temp);
		}
		int ret = stack2.top();
		stack2.pop();
		while(!stack2.empty())
		{
			int temp = stack2.top();
			stack2.pop();
			stack1.push(temp);
		}
		return ret;
	}

private:
	stack<int> stack1;
	stack<int> stack2;
};

class Solution
{
public:
	void push(int node) {
		stack1.push(node);
	}

	int pop() {
		if(stack2.empty())
		{
			while(!stack1.empty())
			{
				int temp = stack1.top();
				stack1.pop();
				stack2.push(temp);
			}
		}
		if(stack2.empty())
			return -1;
		int ret = stack2.top();
		stack2.pop();
		return ret;
	}

private:
	stack<int> stack1;
	stack<int> stack2;
};
