#include<iostream>

using namespace std;
struct ListNode {
	int val;
	struct ListNode *next;
	ListNode(int x) :
			val(x), next(NULL) {
	}
};

ListNode* FindKthToTail(ListNode* pListHead, unsigned int k) 
{
	if(!pListHead || k==0)
		return NULL;
	ListNode *p = pListHead,*q = pListHead;
	for(int i=0;i<k;i++)
	{
		if(!q)
			return NULL;
		q = q->next;		
	}
	while(p && q)
	{
		p = p->next;
		q = q->next;
	}
	return p;
}

ListNode* init(int a[],int n)
{
	ListNode *head,*p;
	head = NULL;
	for(int i=0;i!=n;++i)
	{
		ListNode *nd =new ListNode(a[i]);
		if(i==0)
			head = p = nd;
		else
		{
			p->next = nd;
			p = nd;
		}
	}
	return head;
}

void print(ListNode *head)
{
	ListNode *p = head;
	while(p)
	{
		cout<<p->val<<" ";
		p = p->next;
	}
	cout<<endl;
}

int main()
{
	int a[]={1,2,3,4,5,6};
	ListNode *head = init(a,6);
	print(head);
	cout<<FindKthToTail(head,1)->val<<endl;
	return 0;
}
